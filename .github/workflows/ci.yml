name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.7

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION || 'ap-south-1' }}

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="bucket=${{ vars.TF_STATE_BUCKET }}" \
          -backend-config="key=dofs/terraform.tfstate" \
          -backend-config="region=${{ vars.AWS_REGION || 'ap-south-1' }}" \
          -backend-config="dynamodb_table=${{ vars.TF_STATE_LOCK_TABLE }}"

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      run: |
        terraform plan \
          -var="aws_region=${{ vars.AWS_REGION || 'ap-south-1' }}" \
          -var="environment=${{ vars.ENVIRONMENT || 'dev' }}" \
          -var="project_name=${{ vars.PROJECT_NAME || 'dofs' }}" \
          -var="notification_email=${{ vars.NOTIFICATION_EMAIL }}"

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        terraform apply -auto-approve \
          -var="aws_region=${{ vars.AWS_REGION || 'ap-south-1' }}" \
          -var="environment=${{ vars.ENVIRONMENT || 'dev' }}" \
          -var="project_name=${{ vars.PROJECT_NAME || 'dofs' }}" \
          -var="notification_email=${{ vars.NOTIFICATION_EMAIL }}"
